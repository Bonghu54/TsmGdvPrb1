// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TsmGdvPrb1.Data;

#nullable disable

namespace TsmGdvPrb1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231122034420_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TsmGdvPrb1.Models.Empleado", b =>
                {
                    b.Property<int>("id_empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_empleado"));

                    b.Property<int>("Ventaid_venta")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ci")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fech_contratacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_empleado");

                    b.HasIndex("Ventaid_venta");

                    b.HasIndex("id_usuario")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Producto", b =>
                {
                    b.Property<int>("id_producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_producto"));

                    b.Property<int>("cantidad_en_almacen")
                        .HasColumnType("int");

                    b.Property<string>("descripcion_adicional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio_unitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("tipo_producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidad_de_venta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_producto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Rol", b =>
                {
                    b.Property<int>("id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_rol"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<int>("Rolid_rol")
                        .HasColumnType("int");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechahora_registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_usuario");

                    b.HasIndex("Rolid_rol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Venta", b =>
                {
                    b.Property<int>("id_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_venta"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("estado_seguimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechahora_entrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechahora_venta")
                        .HasColumnType("datetime2");

                    b.Property<int>("productoid_producto")
                        .HasColumnType("int");

                    b.HasKey("id_venta");

                    b.HasIndex("productoid_producto");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Empleado", b =>
                {
                    b.HasOne("TsmGdvPrb1.Models.Venta", "Venta")
                        .WithMany("Empleados")
                        .HasForeignKey("Ventaid_venta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsmGdvPrb1.Models.Usuario", "usuario")
                        .WithOne("Empleado")
                        .HasForeignKey("TsmGdvPrb1.Models.Empleado", "id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venta");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Usuario", b =>
                {
                    b.HasOne("TsmGdvPrb1.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("Rolid_rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Venta", b =>
                {
                    b.HasOne("TsmGdvPrb1.Models.Producto", "producto")
                        .WithMany("Ventas")
                        .HasForeignKey("productoid_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Producto", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Usuario", b =>
                {
                    b.Navigation("Empleado")
                        .IsRequired();
                });

            modelBuilder.Entity("TsmGdvPrb1.Models.Venta", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
